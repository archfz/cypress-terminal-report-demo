{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2024-01-24T10:48:03.227Z",
    "end": "2024-01-24T10:48:06.763Z",
    "duration": 3536,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "97d03363-bde5-4e58-8849-f1a475c0baf0",
      "title": "",
      "fullFile": "cypress/integration/cookies.cy.ts",
      "file": "cypress/integration/cookies.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dabd1ebb-e963-4640-baf7-dd8a893fdc16",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 337,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      []\n    ]\n  },\n  \"        cy:command (K): visit\\thttps://example.cypress.io/commands/cookies\\n        cy:command (K): clearCookies\\n        cy:command (K): get\\t#getCookie .set-a-cookie\\n        cy:command (K): click\\n        cy:command (K): getCookie\\ttoken\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **value** of **123ABC**\\n                        Actual: \\t\\\"123ABC\\\"\\n                        Expected: \\t\\\"123ABC\\\"\\n\"\n]",
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click();\n// cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "8245be32-66a7-4619-a720-b426d5547b8c",
              "parentUUID": "dabd1ebb-e963-4640-baf7-dd8a893fdc16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies for the current domain",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies for the current domain",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      []\n    ]\n  },\n  \"        cy:command (K): visit\\thttps://example.cypress.io/commands/cookies\\n        cy:command (K): clearCookies\\n        cy:command (K): getCookies\\n        cy:command (K): assert\\texpected **[]** to be empty\\n        cy:command (K): get\\t#getCookies .set-a-cookie\\n        cy:command (K): click\\n        cy:command (K): getCookies\\n        cy:command (K): assert\\texpected **[ Array(1) ]** to have a length of **1**\\n                        Actual: \\t1\\n                        Expected: \\t1\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **name**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **name** of **token**\\n                        Actual: \\t\\\"token\\\"\\n                        Expected: \\t\\\"token\\\"\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **value**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **value** of **123ABC**\\n                        Actual: \\t\\\"123ABC\\\"\\n                        Expected: \\t\\\"123ABC\\\"\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **httpOnly**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **httpOnly** of **false**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **secure**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **secure** of **false**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **domain**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **path**\\n\"\n]",
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click();\n// cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(function (cookies) {\n    // each cookie has these properties\n    expect(cookies[0]).to.have.property('name', 'token');\n    expect(cookies[0]).to.have.property('value', '123ABC');\n    expect(cookies[0]).to.have.property('httpOnly', false);\n    expect(cookies[0]).to.have.property('secure', false);\n    expect(cookies[0]).to.have.property('domain');\n    expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "5c9d52c6-3de2-4bc3-bbe6-2269d1f83b9f",
              "parentUUID": "dabd1ebb-e963-4640-baf7-dd8a893fdc16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getAllCookies() - get all browser cookies",
              "fullTitle": "Cookies cy.getAllCookies() - get all browser cookies",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      []\n    ]\n  },\n  \"        cy:command (K): visit\\thttps://example.cypress.io/commands/cookies\\n        cy:command (K): clearCookies\\n        cy:command (K): getAllCookies\\n        cy:command (K): assert\\texpected **[]** to be empty\\n        cy:command (K): setCookie\\tkey, value\\n        cy:command (K): setCookie\\tkey, value, {domain: .example.com}\\n        cy:command (K): getAllCookies\\n        cy:command (K): assert\\texpected **[ Array(2) ]** to have a length of **2**\\n                        Actual: \\t2\\n                        Expected: \\t2\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **name**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **name** of **key**\\n                        Actual: \\t\\\"key\\\"\\n                        Expected: \\t\\\"key\\\"\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **value**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **value** of **value**\\n                        Actual: \\t\\\"value\\\"\\n                        Expected: \\t\\\"value\\\"\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **httpOnly**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **httpOnly** of **false**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **secure**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **secure** of **false**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **domain**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **path**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **name**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **name** of **key**\\n                        Actual: \\t\\\"key\\\"\\n                        Expected: \\t\\\"key\\\"\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **value**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **value** of **value**\\n                        Actual: \\t\\\"value\\\"\\n                        Expected: \\t\\\"value\\\"\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **httpOnly**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **httpOnly** of **false**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **secure**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **secure** of **false**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **domain**\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **domain** of **.example.com**\\n                        Actual: \\t\\\".example.com\\\"\\n                        Expected: \\t\\\".example.com\\\"\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **path**\\n\"\n]",
              "code": "// https://on.cypress.io/getallcookies\ncy.getAllCookies().should('be.empty');\ncy.setCookie('key', 'value');\ncy.setCookie('key', 'value', { domain: '.example.com' });\n// cy.getAllCookies() yields an array of cookies\ncy.getAllCookies().should('have.length', 2).should(function (cookies) {\n    // each cookie has these properties\n    expect(cookies[0]).to.have.property('name', 'key');\n    expect(cookies[0]).to.have.property('value', 'value');\n    expect(cookies[0]).to.have.property('httpOnly', false);\n    expect(cookies[0]).to.have.property('secure', false);\n    expect(cookies[0]).to.have.property('domain');\n    expect(cookies[0]).to.have.property('path');\n    expect(cookies[1]).to.have.property('name', 'key');\n    expect(cookies[1]).to.have.property('value', 'value');\n    expect(cookies[1]).to.have.property('httpOnly', false);\n    expect(cookies[1]).to.have.property('secure', false);\n    expect(cookies[1]).to.have.property('domain', '.example.com');\n    expect(cookies[1]).to.have.property('path');\n});",
              "err": {},
              "uuid": "94291d9f-d4b0-4e52-ab6a-87431f9b743e",
              "parentUUID": "dabd1ebb-e963-4640-baf7-dd8a893fdc16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      []\n    ]\n  },\n  \"        cy:command (K): visit\\thttps://example.cypress.io/commands/cookies\\n        cy:command (K): clearCookies\\n        cy:command (K): getCookies\\n        cy:command (K): assert\\texpected **[]** to be empty\\n        cy:command (K): setCookie\\tfoo, bar\\n        cy:command (K): getCookie\\tfoo\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **value** of **bar**\\n                        Actual: \\t\\\"bar\\\"\\n                        Expected: \\t\\\"bar\\\"\\n\"\n]",
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar');\n// cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "10f13a8e-45f3-4b83-9b01-2670877f4c9f",
              "parentUUID": "dabd1ebb-e963-4640-baf7-dd8a893fdc16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 262,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      []\n    ]\n  },\n  \"        cy:command (K): visit\\thttps://example.cypress.io/commands/cookies\\n        cy:command (K): clearCookies\\n        cy:command (K): getCookie\\ttoken\\n        cy:command (K): assert\\texpected **null** to be null\\n        cy:command (K): get\\t#clearCookie .set-a-cookie\\n        cy:command (K): click\\n        cy:command (K): getCookie\\ttoken\\n        cy:command (K): assert\\texpected **{ Object (name, value, ...) }** to have property **value** of **123ABC**\\n                        Actual: \\t\\\"123ABC\\\"\\n                        Expected: \\t\\\"123ABC\\\"\\n        cy:command (K): clearCookie\\ttoken\\n        cy:command (K): assert\\texpected **null** to be null\\n        cy:command (K): getCookie\\ttoken\\n        cy:command (K): assert\\texpected **null** to be null\\n\"\n]",
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC');\n// cy.clearCookies() yields null\ncy.clearCookie('token').should('be.null');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "51f5ee77-d48a-4254-b76f-da1ce350dfac",
              "parentUUID": "dabd1ebb-e963-4640-baf7-dd8a893fdc16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies for the current domain",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies for the current domain",
              "timedOut": null,
              "duration": 199,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      []\n    ]\n  },\n  \"        cy:command (K): visit\\thttps://example.cypress.io/commands/cookies\\n        cy:command (K): clearCookies\\n        cy:command (K): getCookies\\n        cy:command (K): assert\\texpected **[]** to be empty\\n        cy:command (K): get\\t#clearCookies .set-a-cookie\\n        cy:command (K): click\\n        cy:command (K): getCookies\\n        cy:command (K): assert\\texpected **[ Array(1) ]** to have a length of **1**\\n                        Actual: \\t1\\n                        Expected: \\t1\\n        cy:command (K): clearCookies\\n        cy:command (K): getCookies\\n        cy:command (K): assert\\texpected **[]** to be empty\\n\"\n]",
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1);\n// cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "534a451f-d143-48d5-8f1d-491746d314fb",
              "parentUUID": "dabd1ebb-e963-4640-baf7-dd8a893fdc16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearAllCookies() - clear all browser cookies",
              "fullTitle": "Cookies cy.clearAllCookies() - clear all browser cookies",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      []\n    ]\n  },\n  \"        cy:command (K): visit\\thttps://example.cypress.io/commands/cookies\\n        cy:command (K): clearCookies\\n        cy:command (K): getAllCookies\\n        cy:command (K): assert\\texpected **[]** to be empty\\n        cy:command (K): setCookie\\tkey, value\\n        cy:command (K): setCookie\\tkey, value, {domain: .example.com}\\n        cy:command (K): getAllCookies\\n        cy:command (K): assert\\texpected **[ Array(2) ]** to have a length of **2**\\n                        Actual: \\t2\\n                        Expected: \\t2\\n        cy:command (K): clearAllCookies\\n        cy:command (K): getAllCookies\\n        cy:command (K): assert\\texpected **[]** to be empty\\n\"\n]",
              "code": "// https://on.cypress.io/clearallcookies\ncy.getAllCookies().should('be.empty');\ncy.setCookie('key', 'value');\ncy.setCookie('key', 'value', { domain: '.example.com' });\ncy.getAllCookies().should('have.length', 2);\n// cy.clearAllCookies() yields null\ncy.clearAllCookies();\ncy.getAllCookies().should('be.empty');",
              "err": {},
              "uuid": "87ee882f-83e8-4ead-8703-129736701c3b",
              "parentUUID": "dabd1ebb-e963-4640-baf7-dd8a893fdc16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8245be32-66a7-4619-a720-b426d5547b8c",
            "5c9d52c6-3de2-4bc3-bbe6-2269d1f83b9f",
            "94291d9f-d4b0-4e52-ab6a-87431f9b743e",
            "10f13a8e-45f3-4b83-9b01-2670877f4c9f",
            "51f5ee77-d48a-4254-b76f-da1ce350dfac",
            "534a451f-d143-48d5-8f1d-491746d314fb",
            "87ee882f-83e8-4ead-8703-129736701c3b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1511,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}