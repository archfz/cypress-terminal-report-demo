{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-02-07T16:43:21.530Z",
    "end": "2024-02-07T16:43:28.048Z",
    "duration": 6518,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e4cf1ec0-6428-4fef-94d8-9559173a1963",
      "title": "",
      "fullFile": "cypress/integration/waiting.cy.ts",
      "file": "cypress/integration/waiting.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1c713706-238d-4f75-a3e3-e6c988c05358",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 4510,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      []\n    ]\n  },\n  \"        cy:command (K): visit\\thttps://example.cypress.io/commands/waiting\\n        cy:command (K): get\\t.wait-input1\\n        cy:command (K): type\\tWait 1000ms after typing\\n        cy:command (K): wait\\t1000\\n        cy:command (K): get\\t.wait-input2\\n        cy:command (K): type\\tWait 1000ms after typing\\n        cy:command (K): wait\\t1000\\n        cy:command (K): get\\t.wait-input3\\n        cy:command (K): type\\tWait 1000ms after typing\\n        cy:command (K): wait\\t1000\\n\"\n]",
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "bb2daf36-b9db-4d95-b4cc-1f4672b9f79c",
              "parentUUID": "1c713706-238d-4f75-a3e3-e6c988c05358",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 335,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      []\n    ]\n  },\n  \"        cy:command (K): visit\\thttps://example.cypress.io/commands/waiting\\n      cy:intercept (K): Method: GET\\n                        Matcher: \\\"**/comments/*\\\"\\n        cy:command (K): get\\t.network-btn\\n        cy:command (K): click\\n            cy:xhr (K): GET https://jsonplaceholder.cypress.io/comments/1\\n                        Status: 200\\n        cy:command (K): wait\\t@getComment\\n        cy:command (K): its\\t.response.statusCode\\n        cy:command (K): assert\\texpected **200** to be one of **[ 200, 304 ]**\\n                        Actual: \\t200\\n                        Expected: \\t[200,304]\\n\"\n]",
              "code": "// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// wait for GET comments/1\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);",
              "err": {},
              "uuid": "4732d76c-1462-4cd9-97d7-5fbaa5f71ce1",
              "parentUUID": "1c713706-238d-4f75-a3e3-e6c988c05358",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb2daf36-b9db-4d95-b4cc-1f4672b9f79c",
            "4732d76c-1462-4cd9-97d7-5fbaa5f71ce1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4845,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "configFile": "/home/archy/projects/cypress-terminal-report-demo/multi-reporter-config.json",
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}